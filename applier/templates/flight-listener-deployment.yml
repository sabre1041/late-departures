apiVersion: v1
kind: Template
labels:
  template: flight-listener-deployment
metadata:
  annotations:
    description: Deploys the Flight Listener Image
    iconClass: icon-python
    tags: python
  name: flight-listener-deployment
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Flight Listener Port.
    labels:
      application: ${APPLICATION_NAME}
      deploymentConfig: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      application: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
      deploymentConfig: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      application: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: OSHINKO_CLUSTER_NAME
            value: ${OSHINKO_CLUSTER_NAME}
          - name: APP_ARGS
            value: ${APP_ARGS}
          - name: SPARK_OPTIONS
            value: ${SPARK_OPTIONS}
          - name: OSHINKO_DEL_CLUSTER
            value: ${OSHINKO_DEL_CLUSTER}
          - name: APP_EXIT
            value: "true"
          - name: OSHINKO_NAMED_CONFIG
            value: ${OSHINKO_NAMED_CONFIG}
          - name: OSHINKO_SPARK_DRIVER_CONFIG
            value: ${OSHINKO_SPARK_DRIVER_CONFIG}
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: KAFKA_BROKERS
            value: ${KAFKA_BROKERS}
          - name: KAFKA_INTOPIC
            value: ${KAFKA_INTOPIC}
          - name: KAFKA_OUTTOPIC
            value: ${KAFKA_OUTTOPIC}
          - name: SPARK_OPTIONS
            value: ${SPARK_OPTIONS}
          image: ''
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - mountPath: /etc/podinfo
              name: podinfo
              readOnly: false
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccount: oshinko
        volumes:
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
          name: podinfo
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: flight-listener
- description: Address of the Kafka Brokers.
  name: KAFKA_BROKERS
  required: true
- description: Name of the Kafka In Topic
  displayName: Kafka In Topic
  required: true
  name: KAFKA_INTOPIC
- description: Name of the Kafka Out Topic
  displayName: Kafka Out Topic
  required: true
  name: KAFKA_OUTTOPIC
- description: Command line arguments to pass to the Spark application
  name: APP_ARGS
- description: List of additional Spark options to pass to spark-submit (for exmaple
    --conf property=value --conf property=value). Note, --master and --class are set
    by the launcher and should not be set here
  name: SPARK_OPTIONS
- description: The name of the Spark cluster to run against. The cluster will be created
    if it does not exist, and a random cluster name will be chosen if this value is
    left blank.
  name: OSHINKO_CLUSTER_NAME
- description: The name of a stored cluster configuration to use if a cluster is created,
    default is 'default'.
  name: OSHINKO_NAMED_CONFIG
- description: The name of a configmap to use for the Spark configuration of the driver.
    If this configmap is empty the default Spark configuration will be used.
  name: OSHINKO_SPARK_DRIVER_CONFIG
- description: If a cluster is created on-demand, delete the cluster when the application
    finishes if this option is set to 'true'
  name: OSHINKO_DEL_CLUSTER
  required: true
  value: "true"
